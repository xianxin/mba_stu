/* rem how to visit me 

http://202.120.24.169:9060/psc/ACEMTST/EMPLOYEE/CRM/s/WEBLIB_MBA_STU.TZ_MBA_STU_COURSE.FieldFormula.ISCRIPT_TEST_JETTISON;

*/

Function MakeIntObject(&number As number) Returns JavaObject
   Return CreateJavaObject("java.lang.Integer", &number);
End-Function;

Function MakeDoubleObject(&number As number) Returns JavaObject
   If &number <> Int(Value(&number)) Then
      Return CreateJavaObject("java.lang.Double", &number);
   Else
      Return CreateJavaObject("java.lang.Integer", &number);
   End-If;
End-Function;

Function MakeDateTimeString(&date_time As datetime) Returns string
   Return DateTimeToLocalizedString(&date_time, "yyyy-MM-dd HH:mm:ss")
End-Function;


/**
 *  TEST org.codehaus.jettison
 *  a easy way to make json string.
 *  more than one overload matches.
 *  {"number_int_string":"123","number_double_string":"456.0000000000000","number_double":456,"number_int":123}
 *  createJavaObject("java.lang.Double") is recommended.
 */
Function ISCRIPT_TEST_JETTISON
   Local string &jsonString = "";
   Local JavaObject &joJsonObject;
   &joJsonObject = CreateJavaObject("org.codehaus.jettison.json.JSONObject");
   
   rem we should test number, string, date (number-int and number-double, string-plain and string-quoted);
   Local number &number_int = 123;
   Local number &number_double = 456.0;
   Local string &string_plain = "This is a test string with Chinese word - 我是中国人。";
   Local string &string_quoted = "This is a test string with quotes '中国好声音-单引号' ," | Char(34) | "美国好声音-双引号" | Char(34);
   Local date &date_now = %Date;
   Local datetime &datetime_now = %Datetime;
   
   rem build json string;
   &joJsonObject.put("number_int_string", &number_int | "");
   &joJsonObject.put("number_double_string", &number_double | "");
   &joJsonObject.put("string_plain", &string_plain);
   &joJsonObject.put("string_quoted", &string_quoted);
   &joJsonObject.put("date_now", &date_now);
   &joJsonObject.put("datetime_now", MakeDateTimeString(&datetime_now));
   
   rem must match well, cannot createJavaObject("java.lang.Double(1) ;
   &joJsonObject.put("number_double", MakeDoubleObject(&number_double));
   &joJsonObject.put("number_int", MakeIntObject(&number_int));
   
   &jsonString = &joJsonObject.toString();
   
   %Response.Write(&jsonString);
End-Function;
